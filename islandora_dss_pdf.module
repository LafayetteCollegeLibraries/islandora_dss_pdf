<?php

  /**
   * @file Functionality for the extension of the Islandora PDF Solution Pack
   * @author griffinj@lafayette.edu
   *
   */

require_once dirname(__FILE__) . '/theme/theme.inc';

/**
 * Viewing paginated files in the PDF
 * @see theme_pdf_formatter_pages()
 *
 */
function _islandora_dss_pdf_formatter_pages($variables) {

  drupal_load('module', 'pdf');

  $scale = 1;
  $islandora_object = $variables['islandora_object'];

  /*
  $file_url = file_create_url($variables['file']->uri);
  $filename = $variables['file']->filename;
  $fid = $variables['file']->fid;
  */

  drupal_add_js(libraries_get_path('pdf.js') . '/web/compatibility.js');
  drupal_add_js(libraries_get_path('pdf.js') . '/web/l10n.js');
  drupal_add_js(libraries_get_path('pdf.js') . '/build/pdf.worker.js');
  drupal_add_js(libraries_get_path('pdf.js') . '/build/pdf.js');
  drupal_add_js(libraries_get_path('pdf.js') . '/web/viewer.js');

  //drupal_add_js(drupal_get_path('module', 'pdf') . '/js/PdfListView.js');

  /*
  drupal_add_js(drupal_get_path('module', 'pdf') . '/js/TextLayerBuilder.js');

  $worker_loader = url($GLOBALS['base_url'] . '/' . libraries_get_path('pdf.js') . '/build/pdf.js');
  $js = "PDFJS.workerSrc = '$worker_loader';";
  drupal_add_js($js, array('type' => 'inline'));
  */
  //drupal_add_js(drupal_get_path('module', 'pdf') . '/js/pdf.js');

  /*


  drupal_add_css(drupal_get_path('module', 'pdf') . '/css/TextLayer.css');
  drupal_add_css(drupal_get_path('module', 'pdf') . '/css/pdf.css');

  $worker_loader = url($GLOBALS['base_url'] . '/' . libraries_get_path('pdf.js') . '/build/pdf.js');
  $js = "PDFJS.workerSrc = '$worker_loader';";
  drupal_add_js($js, array('type' => 'inline'));

  drupal_add_js(drupal_get_path('module', 'pdf') . '/js/PdfListView.js');

  //$content = format_string('<div class="pdf" id="viewer fid-@fid" file="@file" scale="@scale">!link</div>', array('@fid' => $fid, '@file' => $file_url, '@scale' => $scale, '!link' => t('Download: ') . theme('file_entity_file_link' , $variables)));
  $content = format_string('<div class="pdf" id="viewer fid-@fid" file="@file" scale="@scale">!link</div>', array('@fid' => $islandora_object->id, '@file' => $GLOBALS['base_url'] . '/islandora/object/' . $islandora_object->id . '/datastream/OBJ/VIEW', '@scale' => $scale, '!link' => t('Download: ') . theme('file_entity_file_link' , $variables)));

  return $content;
  */
}

/**
 * Implements hook_theme().
 */
function islandora_dss_pdf_theme($existing, $type, $theme, $path) {

  return array(
'islandora_pdf' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-pdf',
      'pattern' => 'islandora_pdf__',
      'variables' => array('islandora_object' => NULL),
    )
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function islandora_dss_pdf_theme_registry_alter(&$theme_registry) {

  $theme_registry['islandora_pdf']['template'] = drupal_get_path('module', 'islandora_dss_pdf') . '/theme/islandora-pdf';
}

/**
 * Callback function to view or download a datastream.
 *
 * @see islandora_view_datastream().
 *
 * @param FedoraDatastream $datastream
 *   The datastream to view/download.
 * @param bool $download
 *   If TRUE the file is download to the user computer for viewing otherwise it
 *   will attempt to display in the browser natively.
 */
function islandora_dss_pdf_view_datastream(FedoraDatastream $datastream, $download = FALSE) {

  header_remove('Cache-Control');
  header_remove('Expires');
  header('Content-type: ' . $datastream->mimetype);
  if ($datastream->controlGroup == 'M' || $datastream->controlGroup == 'X') {
    header('Content-length: ' . $datastream->size);
  }
  if ($download) {
    // Browsers will not append all extensions.
    $mime_detect = new MimeDetect();
    $extension = $mime_detect->getExtension($datastream->mimetype);
    $filename = $datastream->label . '.' . $extension;
    header("Content-Disposition: attachment; filename=\"$filename\"");
  }
  drupal_page_is_cacheable(FALSE);
  // Try not to load the file into PHP memory!
  ob_end_flush();
  $datastream->getContent('php://output');
  exit();
}

/**
 * Callback to download the given datastream to the users computer.
 *
 * @see islandora_download_datastream().
 *
 * @param FedoraDatastream $datastream
 *   The datastream to download.
 */
function islandora_dss_pdf_download_datastream(FedoraDatastream $datastream) {

  islandora_dss_pdf_view_datastream($datastream, TRUE);
}

function islandora_dss_pdf_menu_alter(&$items) {

  /*
  $items['islandora/object/%islandora_object/datastream/%islandora_datastream'] = array(
    'title' => 'View datastream',
    'page callback' => 'islandora_view_datastream',
    'page arguments' => array(4, FALSE),
    'type' => MENU_CALLBACK,
    'file' => 'includes/datastream.inc',
    'access callback' => 'islandora_object_datastream_access_callback',
    'access arguments' => array(FEDORA_VIEW_OBJECTS, 2, 4),
    'load arguments' => array(2),
  );
  */

  //$items['islandora/object/%islandora_object/datastream/%islandora_datastream/view']['page callback'] = 'islandora_dss_pdf_view_datastream';
  dpm($items['islandora/object/%islandora_object/datastream/%islandora_datastream']);

  /*
  $items['islandora/object/%islandora_object/datastream/%islandora_datastream/download'] = array(
    'title' => 'Download datastream',
    'page callback' => 'islandora_download_datastream',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/datastream.inc',
    'access callback' => 'islandora_object_datastream_access_callback',
    'access arguments' => array(FEDORA_VIEW_OBJECTS, 2, 4),
    'load arguments' => array(2),
  );
   */

  //$items['islandora/object/%islandora_object/datastream/%islandora_datastream/download']['page callback'] = 'islandora_dss_pdf_download_datastream';
  dpm($items['islandora/object/%islandora_object/datastream/%islandora_datastream/download']);
}